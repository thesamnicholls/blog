{"version":3,"sources":["js/components/Navigation.tsx","js/components/Button.tsx","js/components/Card.tsx","js/components/Loading.tsx","js/pages/Home.tsx","js/pages/About.tsx","js/pages/Post.tsx","js/App.tsx","js/reducers/rootReducer.tsx","index.tsx"],"names":["Navigation","className","to","title","Button","setVisible","onClick","prevState","type","Card","body","id","Loading","connect","state","posts","props","useState","visible","render","setRender","useEffect","timeout","setTimeout","clearTimeout","slice","map","post","key","length","About","ownProps","match","params","post_id","find","dispatch","deletePost","history","push","App","exact","path","component","Home","Post","initialState","rootReducer","action","newPosts","filter","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b07195e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navigation = (): JSX.Element => {\n  return (\n    <div className='c-navigation'>\n      <div className='c-navigation__wrapper'>\n        <p className='c-navigation__title'>Blog</p>\n        <ul className='c-navigation__list'>\n          <li className='c-navigation__list-item'>\n            <Link\n              className='c-navigation__link'\n              to='/blog'\n              title='Click here to go home'\n            >\n              Home\n            </Link>\n          </li>\n          <li className='c-navigation__list-item'>\n            <Link\n              className='c-navigation__link'\n              to='/blog/about'\n              title='Click here to go to the about page'\n            >\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\n\ntype ButtonProps = {\n  title: string\n  setVisible: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Button = ({ title, setVisible }: ButtonProps) => {\n  const loadMore = () => {\n    // Show 5 more cards then what the current amount of cards is\n    setVisible((prevState: number) => prevState + 5)\n  }\n\n  return (\n    <button className='c-button' onClick={loadMore} type='button'>\n      {title}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport interface CardProps {\n  id: number\n  title: string\n  body: string\n}\n\nconst Card = ({ title, body, id }: CardProps) => {\n  return (\n    <div className='c-card'>\n      <Link\n        className='c-card__link'\n        to={'/blog/' + id}\n        title='Click here to go to view the post'\n      >\n        <p className='c-card__title'>{title}</p>\n      </Link>\n      <p className='c-card__description'>{body}</p>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\n\nconst Loading = (): JSX.Element => {\n  return <div className='c-loading'></div>\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport Button from '../components/Button'\nimport Card from '../components/Card'\nimport Loading from '../components/Loading'\nimport { connect } from 'react-redux'\n\nconst Home = (props): JSX.Element => {\n  const [visible, setVisible] = useState(5)\n  const [render, setRender] = useState(false)\n  const { posts } = props\n\n  useEffect(() => {\n    // Delay the useEffect by 1000ms\n    const timeout = setTimeout(() => {\n      // Set the render state to true\n      setRender(true)\n    }, 1000)\n    // Clear the timer when it's done\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return (\n    <div className='l-page'>\n      <h1 className='l-page__title'>Blog</h1>\n      {render ? (\n        <div>\n          <div className='row'>\n            <div className='l-grid'>\n              {posts.slice(0, visible).map((post) => (\n                <Card\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  body={post.body}\n                />\n              ))}\n            </div>\n          </div>\n          <div className='o-row'>\n            {visible < posts.length && (\n              <Button title='Load More' setVisible={setVisible} />\n            )}\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n  }\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React from 'react'\n\nconst About = (): JSX.Element => {\n  return (\n    <div className='l-page'>\n      <h1 className='l-page__title'>About</h1>\n      <p className='l-page__description'>\n        Tellus adipiscing sequi dignissim odio impedit, distinctio, repudiandae\n        felis iure molestiae quod. Torquent ultricies, proident, duis blanditiis\n        facere, beatae, repudiandae pharetra itaque ultricies morbi laudantium\n        varius in saepe fames vel adipisicing, arcu, potenti. Suspendisse. Irure\n        aenean, dolore eius potenti officiis aspernatur porttitor curae\n        praesentium? Aliqua, nunc incidunt ut, qui augue. Suspendisse impedit?\n        Sapien doloribus tenetur, pede iaculis egestas? Hic asperiores dicta\n        quibusdam velit, cillum nisi unde, mauris massa ac, tristique dicta\n        modi! Blandit temporibus condimentum, placerat, eveniet temporibus nunc,\n        eiusmod! Accusantium unde consequat aliquet! Pretium quam pulvinar\n        ullamco sit ultrices id iaculis amet dolores officiis atque laborum\n        metus atque, nihil.\n      </p>\n    </div>\n  )\n}\n\nexport default About\n","import React, { useState, useEffect } from 'react'\nimport Loading from '../components/Loading'\nimport { connect } from 'react-redux'\n\nconst Post = (props: any): JSX.Element => {\n  const [render, setRender] = useState(false)\n  const post = props.post\n\n  const handleClick = () => {\n    props.deletePost(props.post.id)\n    props.history.push('/blog')\n  }\n\n  useEffect(() => {\n    // Delay the useEffect by 1000ms\n    const timeout = setTimeout(() => {\n      // Set the render state to true\n      setRender(true)\n    }, 1000)\n    // Clear the timer when it's done\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return (\n    <div className='l-page'>\n      {render ? (\n        <div>\n          <h1 className='l-page__title'>{post.title}</h1>\n          <p className='l-page__description'>{post.body}</p>\n          <div className='o-row'>\n            <button\n              className='c-button'\n              title='Click here to delete post'\n              onClick={handleClick}\n            >\n              Delete Post\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Getting the id of the current post_id\n  let id = ownProps.match.params.post_id\n  return {\n    // Getting the post which is id is equal to the post_id in the url\n    post: state.posts.find((post) => post.id === id),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deletePost: (id) => {\n      dispatch({ type: 'DELETE_POST', id: id })\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navigation from './components/Navigation'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Post from './pages/Post'\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route exact path='/blog' component={Home} />\n        <Route exact path='/blog/about' component={About} />\n        <Route exact path='/blog/:post_id' component={Post} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const initialState = {\n  posts: [\n    {\n      id: '1',\n      title:\n        'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',\n      body:\n        'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto',\n    },\n    {\n      id: '2',\n      title: 'qui est esse',\n      body:\n        'est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla',\n    },\n    {\n      id: '3',\n      title: 'ea molestias quasi exercitationem repellat qui ipsa sit aut',\n      body:\n        'et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut',\n    },\n    {\n      id: '4',\n      title: 'eum et est occaecati',\n      body:\n        'ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit',\n    },\n    {\n      id: '5',\n      title: 'nesciunt quas odio',\n      body:\n        'repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque',\n    },\n    {\n      id: '6',\n      title: 'dolorem eum magni eos aperiam quia',\n      body:\n        'ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae',\n    },\n    {\n      id: '7',\n      title: 'magnam facilis autem',\n      body:\n        'dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas',\n    },\n    {\n      id: '8',\n      title: 'dolorem dolore est ipsam',\n      body:\n        'dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae',\n    },\n    {\n      id: '9',\n      title: 'nesciunt iure omnis dolorem tempora et accusantium',\n      body:\n        'consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas',\n    },\n    {\n      id: '10',\n      title: 'optio molestias id quia eum',\n      body:\n        'quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error',\n    },\n  ],\n}\n\nconst rootReducer = (state = initialState, action) => {\n  // Only do this is the action type is DELETE_POST\n  if (action.type === 'DELETE_POST') {\n    // Filtering through all of the posts\n    let newPosts = state.posts.filter((post) => {\n      // Return if the action id doesn't equal the post id\n      return action.id !== post.id\n    })\n    return {\n      // Spreading the existing state\n      ...state,\n      // Overriding exisiting state and adding in updated posts object\n      posts: newPosts,\n    }\n  }\n  return state\n}\n\nexport default rootReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/app.scss'\nimport App from './js/App'\nimport rootReducer from './js/reducers/rootReducer'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}