{"version":3,"sources":["js/base/colours.ts","js/base/breakpoints.ts","js/components/Navigation/styles.ts","js/components/Navigation/index.tsx","js/components/Body/styles.ts","js/components/Body/index.tsx","js/components/Title/styles.ts","js/components/Title/index.tsx","js/components/Row/styles.ts","js/components/Row/index.tsx","js/components/Grid/styles.ts","js/components/Grid/index.tsx","js/components/Button/styles.ts","js/components/Button/index.tsx","js/components/Card/styles.ts","js/components/Card/index.tsx","js/components/Loading/styles.ts","js/components/Loading/index.tsx","js/pages/Home.tsx","js/components/Description/styles.ts","js/components/Description/index.tsx","js/pages/About.tsx","js/actions/postActions.tsx","js/pages/Post.tsx","js/App.tsx","js/reducers/rootReducer.tsx","index.tsx"],"names":["BLACK","breakpoints","ms","ml","ts","tl","ls","lxl","ds","dm","dl","dxl","mediaQueries","key","style","Navigation","styled","div","NavigationWrapper","NavigationTitle","p","NavigationList","ul","NavigationListItem","li","NavigationLink","a","href","title","Body","children","Title","h1","text","Row","Grid","Button","button","onClick","Card","CardLink","CardTitle","CardDescription","body","id","loading","keyframes","Loading","connect","state","posts","useState","visible","setVisible","render","setRender","useEffect","timeout","setTimeout","clearTimeout","slice","map","post","length","prevState","Description","About","ownProps","match","params","post_id","find","dispatch","deletePost","type","history","push","App","GlobalStyle","createGlobalStyle","normalize","basename","process","exact","path","component","Home","Post","rel","initialState","store","createStore","action","newPosts","filter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.853aefab.chunk.js","sourcesContent":["export const BLACK = '#000000'\nexport const WHITE = '#FFFFFF'\n","export const breakpoints = {\n  ms: 480,\n  ml: 600,\n  ts: 720,\n  tl: 960,\n  ls: 1024,\n  lxl: 1366,\n  ds: 1400,\n  dm: 1500,\n  dl: 1800,\n  dxl: 1920,\n}\n\nexport const mediaQueries = (key: keyof typeof breakpoints) => {\n  return (style: TemplateStringsArray | String) =>\n    `@media (min-width: ${breakpoints[key]}px) { ${style} }`\n}\n","import styled from 'styled-components'\nimport { BLACK, WHITE } from '../../base/colours'\nimport { mediaQueries } from '../../base/breakpoints'\n\nexport const Navigation = styled.div`\n  background-color: ${BLACK};\n  padding: 20px;\n`\n\nexport const NavigationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 1200px;\n  margin: 0 auto;\n`\n\nexport const NavigationTitle = styled.p`\n  font-size: 24px;\n  color: ${WHITE};\n  margin: 0;\n`\n\nexport const NavigationList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  margin: 0;\n`\n\nexport const NavigationListItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`\n\nexport const NavigationLink = styled.a`\n  font-size: 18px;\n  color: ${WHITE};\n  text-decoration: none;\n  padding: 10px;\n  ${mediaQueries('ms')`\n    font-size: 20px;\n  `}\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport default function Navigation() {\n  return (\n    <Styles.Navigation>\n      <Styles.NavigationWrapper>\n        <Styles.NavigationTitle>Blog</Styles.NavigationTitle>\n        <Styles.NavigationList>\n          <Styles.NavigationListItem>\n            <Styles.NavigationLink href='/blog' title='Click here to go home'>\n              Home\n            </Styles.NavigationLink>\n          </Styles.NavigationListItem>\n          <Styles.NavigationListItem>\n            <Styles.NavigationLink\n              href='/blog/about'\n              title='Click here to go to the about page'\n            >\n              About\n            </Styles.NavigationLink>\n          </Styles.NavigationListItem>\n        </Styles.NavigationList>\n      </Styles.NavigationWrapper>\n    </Styles.Navigation>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface BodyProps {\n  children: React.ReactNode\n}\n\nexport default function Body({ children }: BodyProps) {\n  return <Styles.Body>{children}</Styles.Body>\n}\n","import styled from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  color: ${BLACK};\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface TitleProps {\n  text: string\n}\n\nexport default function Title({ text }: TitleProps) {\n  return <Styles.Title>{text}</Styles.Title>\n}\n","import styled from 'styled-components'\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface RowProps {\n  children: React.ReactNode\n}\n\nexport default function Row({ children }: RowProps) {\n  return <Styles.Row>{children}</Styles.Row>\n}\n","import styled from 'styled-components'\nimport { mediaQueries } from '../../base/breakpoints'\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 40px;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  ${mediaQueries('ms')`\n    padding: 20px;\n  `}\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface GridProps {\n  children: React.ReactNode\n}\n\nexport default function Grid({ children }: GridProps) {\n  return <Styles.Grid>{children}</Styles.Grid>\n}\n","import styled from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid ${BLACK};\n  font-size: 20px;\n  box-shadow: none;\n  cursor: pointer;\n  padding: 10px 20px;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\ntype ButtonProps = {\n  title: string\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nconst Button = ({ title, onClick }: ButtonProps) => {\n  return <Styles.Button onClick={onClick}>{title}</Styles.Button>\n}\n\nexport default Button\n","import styled from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nexport const Card = styled.div`\n  box-shadow: 0px 3px 15px rgba(${BLACK}, 0.5);\n  width: 100%;\n  padding: 20px;\n`\n\nexport const CardLink = styled.a`\n  color: ${BLACK};\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const CardTitle = styled.p`\n  font-size: 24px;\n  line-height: 1.2;\n  margin: 0 0 10px 0;\n`\n\nexport const CardDescription = styled.p`\n  line-height: 1.2;\n  margin: 0;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface CardProps {\n  id: number\n  title: string\n  body: string\n}\n\nexport default function Card({ title, body, id }: CardProps) {\n  return (\n    <Styles.Card>\n      <Styles.CardLink\n        href={'/blog/' + id}\n        title='Click here to go to view the post'\n      >\n        <Styles.CardTitle>{title}</Styles.CardTitle>\n      </Styles.CardLink>\n      <Styles.CardDescription>{body}</Styles.CardDescription>\n    </Styles.Card>\n  )\n}\n","import styled, { keyframes } from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nconst loading = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Loading = styled.div`\n  border-radius: 50%;\n  border: 4px solid rgba(${BLACK}, 0.25);\n  animation: 1.64s ${loading} infinite linear;\n  border-top: 4px solid ${BLACK};\n  transform: translate(-50%, -50%);\n  width: 50px;\n  height: 50px;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport default function Loading() {\n  return <Styles.Loading />\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Body from '../components/Body/index'\nimport Title from '../components/Title/index'\nimport Row from '../components/Row/index'\nimport Grid from '../components/Grid/index'\nimport Button from '../components/Button/index'\nimport Card from '../components/Card/index'\nimport Loading from '../components/Loading/index'\n\nexport interface Posts {\n  id: number\n  title: string\n  body: string\n}\n\nexport interface HomeProps {\n  posts: Array<Posts>\n}\n\nconst Home = ({ posts }: HomeProps): JSX.Element => {\n  const [visible, setVisible] = useState(5)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setRender(true)\n    }, 1000)\n    return () => clearTimeout(timeout)\n  }, [])\n\n  const loadMore = () => {\n    setVisible((prevState: number) => prevState + 5)\n  }\n\n  return (\n    <Body>\n      <Title text='Blog' />\n      {render ? (\n        <>\n          <Row>\n            <Grid>\n              {posts.slice(0, visible).map((post: Posts) => (\n                <Card\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  body={post.body}\n                />\n              ))}\n            </Grid>\n          </Row>\n          <Row>\n            {visible < posts.length && (\n              <Button title='Load More' onClick={loadMore} />\n            )}\n          </Row>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </Body>\n  )\n}\n\nconst mapStateToProps = (state: { posts: Array<Posts> }) => {\n  return {\n    posts: state.posts,\n  }\n}\n\nexport default connect(mapStateToProps)(Home)\n","import styled from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nexport const Description = styled.p`\n  font-family: $font-regular;\n  line-height: 1.4;\n  text-align: center;\n  color: ${BLACK};\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface DescriptionProps {\n  text: string\n}\n\nexport default function Description({ text }: DescriptionProps) {\n  return <Styles.Description>{text}</Styles.Description>\n}\n","import React from 'react'\nimport Body from '../components/Body/index'\nimport Title from '../components/Title/index'\nimport Description from '../components/Description/index'\n\nexport default function About() {\n  return (\n    <Body>\n      <Title text='About' />\n      <Description\n        text='Tellus adipiscing sequi dignissim odio impedit, distinctio, repudiandae\n        felis iure molestiae quod. Torquent ultricies, proident, duis blanditiis\n        facere, beatae, repudiandae pharetra itaque ultricies morbi laudantium\n        varius in saepe fames vel adipisicing, arcu, potenti. Suspendisse. Irure\n        aenean, dolore eius potenti officiis aspernatur porttitor curae\n        praesentium? Aliqua, nunc incidunt ut, qui augue. Suspendisse impedit?\n        Sapien doloribus tenetur, pede iaculis egestas? Hic asperiores dicta\n        quibusdam velit, cillum nisi unde, mauris massa ac, tristique dicta\n        modi! Blandit temporibus condimentum, placerat, eveniet temporibus nunc,\n        eiusmod! Accusantium unde consequat aliquet! Pretium quam pulvinar\n        ullamco sit ultrices id iaculis amet dolores officiis atque laborum\n        metus atque, nihil.'\n      />\n    </Body>\n  )\n}\n","export const deletePost = (id: string) => {\n  return {\n    type: 'DELETE_POST',\n    id,\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { History } from 'history'\nimport { connect } from 'react-redux'\nimport { deletePost } from '../actions/postActions'\nimport Body from '../components/Body/index'\nimport Title from '../components/Title/index'\nimport Row from '../components/Row/index'\nimport Button from '../components/Button/index'\nimport Loading from '../components/Loading/index'\nimport Description from '../components/Description/index'\n\nexport interface Post {\n  id: string\n  title: string\n  body: string\n}\n\nexport interface OwnProps {\n  match: { params: { post_id: string } }\n}\n\nexport interface PostProps {\n  post?: Post | undefined\n  deletePost(id: string): void\n  history: History\n}\n\nconst Post = ({ post, deletePost, history }: PostProps): JSX.Element => {\n  const [render, setRender] = useState(false)\n\n  const handleClick = () => {\n    deletePost(post!.id)\n    history.push('/blog')\n  }\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setRender(true)\n    }, 1000)\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return (\n    <Body>\n      {render ? (\n        <>\n          <Title text={post!.title} />\n          <Description text={post!.body} />\n          <Row>\n            <Button title='Delete Post' onClick={handleClick} />\n          </Row>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </Body>\n  )\n}\n\nconst mapStateToProps = (state: { posts: Array<Post> }, ownProps: OwnProps) => {\n  let id = ownProps.match.params.post_id\n  return {\n    post: state.posts.find((post: Post) => post.id === id),\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: (deletePost: { type: string; id: string }) => void,\n) => {\n  return {\n    deletePost: (id: string) => {\n      dispatch(deletePost(id))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'styled-normalize'\nimport Navigation from './components/Navigation/index'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Post from './pages/Post'\n\nexport default function App() {\n  const GlobalStyle = createGlobalStyle`\n    ${normalize}\n    * {\n      font-family: 'Poppins', sans-serif;\n      box-sizing: border-box;\n    }\n  `\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/:post_id' component={Post} />\n      </Switch>\n      <GlobalStyle />\n      <link\n        href='https://fonts.googleapis.com/css?family=Poppins&display=swap'\n        rel='stylesheet'\n      />\n    </BrowserRouter>\n  )\n}\n","const initialState = {\n  posts: [\n    {\n      id: '1',\n      title:\n        'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',\n      body:\n        'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto',\n    },\n    {\n      id: '2',\n      title: 'qui est esse',\n      body:\n        'est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla',\n    },\n    {\n      id: '3',\n      title: 'ea molestias quasi exercitationem repellat qui ipsa sit aut',\n      body:\n        'et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut',\n    },\n    {\n      id: '4',\n      title: 'eum et est occaecati',\n      body:\n        'ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit',\n    },\n    {\n      id: '5',\n      title: 'nesciunt quas odio',\n      body:\n        'repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque',\n    },\n    {\n      id: '6',\n      title: 'dolorem eum magni eos aperiam quia',\n      body:\n        'ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae',\n    },\n    {\n      id: '7',\n      title: 'magnam facilis autem',\n      body:\n        'dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas',\n    },\n    {\n      id: '8',\n      title: 'dolorem dolore est ipsam',\n      body:\n        'dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae',\n    },\n    {\n      id: '9',\n      title: 'nesciunt iure omnis dolorem tempora et accusantium',\n      body:\n        'consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas',\n    },\n    {\n      id: '10',\n      title: 'optio molestias id quia eum',\n      body:\n        'quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error',\n    },\n  ],\n}\n\nexport const DELETE_POST = 'DELETE_POST'\n\nexport interface DeletePostAction {\n  id: string\n  type: typeof DELETE_POST\n}\n\nexport default function rootReducer(\n  state = initialState,\n  action: DeletePostAction,\n) {\n  if (action.type === 'DELETE_POST') {\n    let newPosts = state.posts.filter((post) => {\n      return action.id !== post.id\n    })\n    return {\n      ...state,\n      posts: newPosts,\n    }\n  }\n  return state\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './js/App'\nimport rootReducer from './js/reducers/rootReducer'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}